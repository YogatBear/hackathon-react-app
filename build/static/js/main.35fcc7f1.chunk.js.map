{"version":3,"sources":["components/StoreList.js","components/StoreDetails.js","components/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["StoreList","_ref","stores","onSelectStore","React","createElement","style","height","overflow","map","store","key","id","onClick","cursor","padding","borderBottom","name","description","QRModal","onClose","value","position","top","left","transform","width","minHeight","background","boxShadow","zIndex","borderRadius","marginBottom","float","marginRight","border","fontWeight","QRCode","size","marginTop","StoreDetails","_ref2","showQR","setShowQR","useState","qrValue","setQRValue","handlePurchaseClick","qrData","concat","src","imageUrl","alt","backdropUrl","display","margin","Dashboard","addStore","setStore","handleChange","e","target","prevState","onSubmit","preventDefault","type","onChange","App","defaultStore","setStores","selectedStore","setSelectedStore","Router","flexDirection","alignItems","Link","to","Routes","Route","path","element","borderRight","newStore","updatedStores","Math","random","toString","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.35fcc7f1.chunk.js","sourcesContent":["import React from 'react';\n\nconst StoreList = ({ stores, onSelectStore }) => {\n  return (\n    <div style={{ height: '100vh', overflow: 'auto' }}>\n      {stores && stores.map(store => (\n        <div key={store.id} onClick={() => onSelectStore(store)} style={{ cursor: 'pointer', padding: '10px', borderBottom: '1px solid #ccc' }}>\n          <h3>{store.name}</h3>\n          <p>{store.description}</p>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default StoreList;\n","import React, { useState } from 'react';\nimport QRCode from 'qrcode.react';\n\nconst QRModal = ({ onClose, value }) => {\n  return (\n    <div style={{ position: 'fixed', top: '50%', left: '50%', transform: 'translate(-50%, -50%)', width: 'auto', minHeight: '200px', padding: '20px', background: 'white', boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)', zIndex: 1000, borderRadius: '8px' }}>\n      <div style={{ marginBottom: '20px' }}>\n        <button onClick={onClose} style={{ float: 'left', marginRight: '16px', background: 'none', border: 'none', cursor: 'pointer', fontWeight: 'bold' }}>X</button>\n        <h2>Your Coupon</h2>\n      </div>\n      <QRCode value={value} size={256} />\n      <p style={{ marginTop: '20px' }}>Let the store scan this to redeem the coupon.</p>\n    </div>\n  );\n};\n\nconst StoreDetails = ({ store }) => {\n  const [showQR, setShowQR] = useState(false);\n  const [qrValue, setQRValue] = useState('');\n\n  if (!store) return <div>Select a store to see its details.</div>;\n\n  const handlePurchaseClick = (value) => {\n    const qrData = `${store.name}|${value}`;\n    setQRValue(qrData);\n    setShowQR(true);\n  };\n\n  return (\n    <div style={{ padding: '20px' }}>\n      <h2>{store.name}</h2>\n      <img src={store.imageUrl} alt={store.name} style={{ width: '100px', height: '100px' }} />\n      <img src={store.backdropUrl} alt={store.name} style={{ width: '100%', height: '200px', display: 'block', margin: '20px 0' }} />\n      <p>{store.description}</p>\n      <button onClick={() => handlePurchaseClick(5)}>$5 Coupon</button>\n      <button onClick={() => handlePurchaseClick(10)}>$10 Coupon</button>\n      <button onClick={() => handlePurchaseClick(20)}>$20 Coupon</button>\n\n      {showQR && (\n        <QRModal onClose={() => setShowQR(false)} value={qrValue} />\n      )}\n    </div>\n  );\n};\n\nexport default StoreDetails;\n","// src/components/Dashboard.js\nimport React, { useState } from 'react';\n\nconst Dashboard = ({ addStore }) => {\n  const [store, setStore] = useState({ name: '', description: '' });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setStore(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Here you would add logic to add the store to your state or database\n    addStore(store);\n    setStore({ name: '', description: '' }); // Reset form\n  };\n\n  return (\n    <form onSubmit={handleSubmit} style={{ marginTop: '20px' }}>\n      <label>\n        Store Name:\n        <input type=\"text\" name=\"name\" value={store.name} onChange={handleChange} />\n      </label>\n      <label>\n        Description:\n        <input type=\"text\" name=\"description\" value={store.description} onChange={handleChange} />\n      </label>\n      <button type=\"submit\">Add Store</button>\n    </form>\n  );\n};\n\nexport default Dashboard;\n","import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Link } from 'react-router-dom';\nimport StoreList from './components/StoreList';\nimport StoreDetails from './components/StoreDetails';\nimport Dashboard from './components/Dashboard';\n\nconst App = () => {\n  // Example default store\n  const defaultStore = {\n    id: '1',\n    name: 'Default Store',\n    description: 'This is a default store loaded on application start.',\n    imageUrl: 'path/to/default/store/image.jpg',\n    backdropUrl: 'path/to/default/store/backdrop.jpg'\n  };\n\n  const [stores, setStores] = useState([defaultStore]);\n  // Set the default store as selected store on initial load\n  const [selectedStore, setSelectedStore] = useState(defaultStore);\n\n  const handleAddStore = (newStore) => {\n    const updatedStores = [...stores, { ...newStore, id: Math.random().toString() }];\n    setStores(updatedStores);\n    // Optionally set the new store as selected\n    // setSelectedStore(updatedStores[updatedStores.length - 1]);\n  };\n\n  return (\n    <Router>\n      <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n        <nav style={{ padding: '20px' }}>\n          <Link to=\"/\" style={{ marginRight: '20px' }}>Stores</Link>\n          <Link to=\"/dashboard\">Dashboard</Link>\n        </nav>\n        <Routes>\n          <Route path=\"/\" element={\n            <div style={{ display: 'flex', width: '100%' }}>\n              <div style={{ width: '30%', borderRight: '1px solid #ccc' }}>\n                <StoreList stores={stores} onSelectStore={setSelectedStore} />\n              </div>\n              <div style={{ width: '70%' }}>\n                <StoreDetails store={selectedStore} />\n              </div>\n            </div>\n          } />\n          <Route path=\"/dashboard\" element={<Dashboard addStore={handleAddStore} />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}